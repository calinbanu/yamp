version: 2.1
orbs:
  codecov: codecov/codecov@3.2.5

executors:
  yamp-docker-img:
    docker:
      - image: banucalin/yamp:latest

jobs:
  fetch:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Fetch dependencies
          command: cargo fetch
      - save_cache:
          paths:
            - /usr/local/cargo/registry
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}

  test:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Calculate dependencies and fetch
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Generate unit test xml
          command: cargo +nightly test -- -Z unstable-options --format json --report-time | cargo2junit > unit_test_results.xml
      - store_test_results:
          path: unit_test_results.xml

  profile:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Calculate dependencies and fetch
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Generate profile data
          command: ./profile.sh --test --tool grcov --format lcov --output profile-data
      
  format:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Calculate dependencies and fetch
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Formatting
          command: cargo fmt --all -- --check

  lint:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Calculate dependencies and fetch
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Linting
          command: cargo clippy --no-deps

  security:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Calculate dependencies and fetch
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-registry-key-{{ .Environment.CACHE_VERSION }}-{{ checksum "Cargo.lock" }}
      - restore_cache:
          key: cargo-audit-key-{{ .Environment.AUDIT_CACHE_VERSION }}
      - run:
          name: Check for known security issues in dependencies
          command: cargo audit || true
      - save_cache:
          paths: /usr/local/cargo/advisory-db
          key: cargo-audit-key-{{ .Environment.AUDIT_CACHE_VERSION }}

  prepare-release:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Create draft github release
          command: ./gh-deploy.sh --draft --release --branch develop

  build-release-x86_64-linux-gnu:
    executor: yamp-docker-img
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Build all targets
          command: ./build-and-package.sh --release --target x86_64-unknown-linux-gnu
      - run:
          name: Upload to release
          command: ./gh-deploy.sh --artifacts ./artifacts
      - store_artifacts:
          path: ./artifacts

workflows:
  test-and-profile:
    jobs:
      - fetch
      - lint:
          requires:
            - fetch

      - format:
          requires:
            - fetch

      - security:
          requires:
            - fetch

      - test:
          requires:
            - fetch

      - profile:
          post-steps:
            - codecov/upload:
                file: profile-data/lcov.info
          requires:
            - test
            - lint
            - format
            - security

  deploy:
    jobs:
      - release-approval:
          type: approval
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore: /.*/

      - prepare-release:
          context:
            - GITHUB_CREDS
          requires:
            - release-approval
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore: /.*/

      - build-release-x86_64-linux-gnu:
          context:
            - GITHUB_CREDS
          requires:
            - prepare-release
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore: /.*/